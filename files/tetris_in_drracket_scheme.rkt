#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 74 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 39 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 8359 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 203
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e tetris_in_drracket_scheme) (read-case-sensitive #t) (teachpacks ()"
 #") (htdp-settings #(#t constructor repeating-decimal #f #t none #f ()"
 #")))"
) 0 0 4 29 1 #"\n"
0 0 17 3 17 #";; Problem Set 9 "
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 60 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 60 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 45 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 30 #";; Problem A1: Tetris Part III"
0 0 60 29 1 #"\n"
0 0 17 3 45 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 60 3 1 #" "
0 0 20 3 2 #"30"
0 0 22 3 1 #")"
0 0 60 3 1 #" "
0 0 17 3 30 #"; width of a game-board square"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 60 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 1 #")"
0 0 60 3 1 #" "
0 0 17 3 24 #"; height in grid squares"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 60 3 2 #"  "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 60 3 1 #" "
0 0 17 3 24 #"; width  in grid squares"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 19 #"BOARD-HEIGHT-PIXELS"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 18 #"BOARD-WIDTH-PIXELS"
0 0 60 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 14 3 11 #"BOARD-WIDTH"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"empty-scene"
0 0 64 3 1 #" "
0 0 14 3 18 #"BOARD-WIDTH-PIXELS"
0 0 64 3 1 #" "
0 0 14 3 19 #"BOARD-HEIGHT-PIXELS"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 19 #";; Data Definitions"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 49 #";; A Block is a (make-block Number, Number Color)"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 64 3 1 #" "
0 0 14 3 5 #"block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 14 3 5 #"color"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 36 #";; A Set of Blocks (BSet) is one of:"
0 0 60 29 1 #"\n"
0 0 17 3 10 #";; - empty"
0 0 60 29 1 #"\n"
0 0 17 3 22 #";; - (cons Block BSet)"
0 0 60 29 1 #"\n"
0 0 17 3 55 #";; Order does not matter.  Repetitions are NOT allowed."
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 38 #";; A Tetra is a (make-tetra Posn BSet)"
0 0 60 29 1 #"\n"
0 0 17 3 63
#";; The center point is the point around which the tetra rotates"
0 0 60 29 1 #"\n"
0 0 17 3 17 #";; when it spins."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"center"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 39 #";; A World is a (make-world Tetra BSet)"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 64 3 1 #" "
0 0 14 3 5 #"world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"tetra"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 64
#";O-block, i-block, l-block, j-block, t-block, z-block, s-block: "
0 0 60 29 1 #"\n"
0 0 17 3 23 #";Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 52 #";Consumes start location, creates the type of block."
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";; O-block : Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 58
#";; Consumes an x & y coordinate and produces an \"O\" tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"O-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 2 #".5"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 2 #".5"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 17 3 17 #";; Tests/Examples"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"O-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 3 #"1.5"
0 0 64 3 1 #" "
0 0 20 3 3 #"1.5"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 40 #"                                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";; i-block : Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 58
#";; Consumes an x & y coordinate and produces an \"I\" tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"i-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 17 #";; Tests/Examples"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"i-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 40 #"                                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";; l-block : Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 58
#";; Consumes an x & y coordinate and produces an \"L\" tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"l-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 17 #";; Tests/Examples"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"l-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 40 #"                                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";; j-block : Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 57
#";; Consumes an x & y coordinate and produces a \"J\" Tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"j-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 17 #";; Tests/Examples"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"j-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 40 #"                                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"lightblue"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";; t-block : Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 58
#";; Consumes an x & y coordinate and produces an \"T\" Tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"t-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 18 #";; Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"t-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 40 #"                                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";; z-block : Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 58
#";; Consumes an x & y coordinate and produces an \"Z\" Tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"z-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 18 #";; Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"z-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 40 #"                                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";; s-block : Number Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 58
#";; Consumes an x & y coordinate and produces an \"S\" Tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"s-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 18 #";; Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"s-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 40 #"                                        "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 46 #"                                              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 30 #";; new-tetra : Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 62
#";; Produces a random tetra structure at the top of the screen."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"O-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"i-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"l-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"j-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"t-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"z-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"n"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"s-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 4 #")]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 18 #";; Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"O-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"i-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"l-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"j-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"t-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"z-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"s-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"21"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 19 #";; Useful Templates"
0 0 60 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"world-template"
0 0 60 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 60 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 60 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"tetra-template"
0 0 60 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 60 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 2 #"))"
0 0 14 3 3 #"..."
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 60 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 2 #"))"
0 0 14 3 3 #"..."
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 60 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 60 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 2 #"))"
0 0 14 3 4 #"...."
0 0 22 3 1 #"]"
0 0 60 29 1 #"\n"
0 0 60 3 13 #"             "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 60 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 60 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 2 #"))"
0 0 14 3 3 #"..."
0 0 60 3 1 #" "
0 0 60 29 1 #"\n"
0 0 60 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 14 #"tetra-template"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 60 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 3 47 #"                                               "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 60 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 7 #"))))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"block-template"
0 0 60 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 60 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 60 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 60 29 1 #"\n"
0 0 60 3 4 #"    "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 11 #"block-color"
0 0 60 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 29 #";;Example Data used for Tests"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 5 #"pile2"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 5 #"BSet2"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 5 #"BSet3"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 5 #"BSet4"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"O-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 6 #"tetra2"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"l-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 6 #"tetra3"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"z-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 6 #"tetra4"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"t-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 6 #"block1"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 6 #"block2"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"random"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 22 3 2 #"))"
0 0 64 3 2 #"  "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 2 #"w1"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 2 #"w2"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra2"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile2"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 60 3 1 #" "
0 0 14 3 2 #"w3"
0 0 60 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra3"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile2"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 34 #";This is where the program starts!"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 10 #";MOVEMENTS"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 39 #";block-move : Bset Number Number-> Bset"
0 0 60 29 1 #"\n"
0 0 17 3 59
#";Moves the blocks of a tetra in the given x or y direction."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 11 #"block-color"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 22 3 5 #"))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet2"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";move-tetra : Tetra Number -> Tetra"
0 0 60 29 1 #"\n"
0 0 17 3 40 #";Moves the tetra in the given direction."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"move-tetra"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"center-move"
0 0 64 3 1 #" "
0 0 14 3 6 #"center"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 64 3 1 #" "
0 0 14 3 6 #"center"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 64 3 1 #" "
0 0 14 3 6 #"center"
0 0 22 3 5 #"))))]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"center-move"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 11 #"blocks-move"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 14 3 5 #"y-dir"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 15 #";Tests/Examples"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"move-tetra"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 39 #"                                       "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 3 #"7.5"
0 0 64 3 1 #" "
0 0 20 3 3 #"9.5"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 39 #"                                       "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"move-tetra"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 39 #"                                       "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 39 #"                                       "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"move-tetra"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 3 #"5.5"
0 0 64 3 1 #" "
0 0 20 3 3 #"8.5"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"move-tetra"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra2"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 11 #";COLLISIONS"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 41 #";block-collision? : Block Bset -> Boolean"
0 0 60 29 1 #"\n"
0 0 17 3 49 #";Determines if a single block collides in a pile."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-collision?"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 5 #")))))"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-collision?"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 5 #"))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 18 #";; Examples/Tests:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-collision?"
0 0 64 3 1 #" "
0 0 14 3 6 #"block1"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-collision?"
0 0 64 3 1 #" "
0 0 14 3 6 #"block2"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-collision?"
0 0 64 3 1 #" "
0 0 14 3 6 #"block1"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 29 #";hit-bottom : Bset -> boolean"
0 0 60 29 1 #"\n"
0 0 17 3 52 #";Checks if the block has hit the bottom of the grid."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"hit-bottom"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 2 #"<="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 10 #"hit-bottom"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 3 #"]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 17 #"; Examples/Tests:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"hit-bottom"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"hit-bottom"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"hit-bottom"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";Collision? : Tetra Bset -> Boolean"
0 0 60 29 1 #"\n"
0 0 17 3 71
(
 #";Checks for collisions by passing blocks and piles to block-collisio"
 #"n? "
) 0 0 60 29 1 #"\n"
0 0 17 3 40 #";Uses recursion to take apart the Bsets."
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"collision?"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 16 #"block-collision?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 10 #"collision?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 10 #"hit-bottom"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 3 #"]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"collision?"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"collision?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"l-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"collision?"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"collision?"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra3"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 25 #";Bset->ylist: BSet -> LoN"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"Bset->ylist"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"Bset->ylist"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 6 #")))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"Bset->ylist"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"Bset->ylist"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 33 #";remove-row: BSet, Number -> Bset"
0 0 60 29 1 #"\n"
0 0 17 3 29 #";removes row at given y value"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"remove-row"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 7 #"       "
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"filter"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"remove-row"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 41 #"                                         "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"remove-row"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet2"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 41 #"                                         "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"remove-row"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";lower-blocks: BSet, Number -> Bset"
0 0 60 29 1 #"\n"
0 0 17 3 45 #";Lowers all blocks above the given row number"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"lower-blocks"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #">"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 4 #"sub1"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 11 #"block-color"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"lower-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 3 #"))]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"lower-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 5 #"))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"lower-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"lower-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 43 #"                                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"lower-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 36 #";adjust-blocks: Bset, Number -> Bset"
0 0 60 29 1 #"\n"
0 0 17 3 38 #";Removes full row, lowers above blocks"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"adjust-blocks"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 64 3 1 #" "
0 0 14 3 12 #"complete-row"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"lower-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"remove-row"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 64 3 1 #" "
0 0 14 3 12 #"complete-row"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 12 #"complete-row"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"adjust-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"adjust-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"adjust-blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";count-number: Number LoN -> Number"
0 0 60 29 1 #"\n"
0 0 17 3 46 #";How many times does a number occur in a list?"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"count-number"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"count-number"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 4 #")))]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"count-number"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 5 #"))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"count-number"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"Bset->ylist"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"count-number"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"count-number"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 24 #";full-row: LON -> Number"
0 0 60 29 1 #"\n"
0 0 17 3 79
(
 #";Consumes list of Y values. Determines if any row is full. Returns r"
 #"ow Y value."
) 0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"full-row"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 2 #"or"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 2 #">="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"count-number"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"full-row"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 22 3 4 #")]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"full-row"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"full-row"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"full-row"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 25 #";check-pile: BSet -> Bset"
0 0 60 29 1 #"\n"
0 0 17 3 30 #";Checks and removes full rows."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"check-pile"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 1 #">"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"full-row"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"Bset->ylist"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 10 #"check-pile"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"adjust-blocks"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"full-row"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"Bset->ylist"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 5 #"))))]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 3 #"]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"check-pile"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet3"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"check-pile"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet4"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"check-pile"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 34 #";next-tetra-world : world -> world"
0 0 60 29 1 #"\n"
0 0 17 3 58
#";In the case of a collision, next-tetra-world gets called."
0 0 60 29 1 #"\n"
0 0 17 3 61
#";Adds the tetra to the pile of blocks. Calls for a new tetra."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"next-tetra-world"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"random"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"check-pile"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"append"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 5 #")))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 53 #";block-collision-dir?: Block BSet operator -> Boolean"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";Is a block next to a wall or pile?"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 64 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"op"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 4 #"))))"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 4 #")]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 14 3 6 #"block1"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 64 3 1 #" "
0 0 14 3 1 #"-"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 14 3 6 #"block1"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet4"
0 0 64 3 1 #" "
0 0 14 3 1 #"-"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 14 3 6 #"block1"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet4"
0 0 64 3 1 #" "
0 0 14 3 1 #"+"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 14 3 6 #"block1"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 64 3 1 #" "
0 0 14 3 1 #"+"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 37 #";collide-right?: BSet BSet -> Boolean"
0 0 60 29 1 #"\n"
0 0 17 3 40 #";Are the blocks within the x boundaries?"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"collide-right?"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 2 #">="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"+"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"collide-right?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 4 #")]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"collide-right?"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"collide-right?"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"collide-right?"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet3"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 36 #";collide-left?: BSet BSet -> Boolean"
0 0 60 29 1 #"\n"
0 0 17 3 40 #";Are the blocks within the x boundaries?"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"collide-left?"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 2 #"<="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 20 #"block-collision-dir?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"-"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"collide-left?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"pile"
0 0 22 3 4 #")]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"collide-left?"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 14 3 5 #"pile1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"collide-left?"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet4"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"collide-left?"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 20 #";RENDERING THE SCENE"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 57 #";place-image-on-grid : Image Number Number Image -> Image"
0 0 60 29 1 #"\n"
0 0 17 3 76
(
 #";Consumes Shape, x, y, and a scene, and places the shape img at coor"
 #"dinates."
) 0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"place-image-on-grid"
0 0 64 3 1 #" "
0 0 14 3 3 #"img"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 64 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 64 3 1 #" "
0 0 14 3 3 #"img"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 64 3 1 #" "
0 0 14 3 19 #"BOARD-HEIGHT-PIXELS"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 64 3 7 #"       "
0 0 14 3 5 #"scene"
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 35 #";blocks+scene : Bset Image -> Image"
0 0 60 29 1 #"\n"
0 0 17 3 64
#";Recurses through a list of blocks to put them all on the scene."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"blocks+scene"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 64 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"place-image-on-grid"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"overlay"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 64 3 2 #"  "
0 0 64 29 1 #"\n"
0 0 64 3 52 #"                                                    "
0 0 22 3 1 #"("
0 0 14 3 11 #"block-color"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 6 #"square"
0 0 64 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"black"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 26 #"                          "
0 0 64 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 12 #"blocks+scene"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 6 #"blocks"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"scene"
0 0 22 3 5 #"))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 29 #";;; world->image : w -> image"
0 0 60 29 1 #"\n"
0 0 17 3 34 #";;; Render the world into a image."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"world->image"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 12 #"blocks+scene"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 11 #"           "
0 0 64 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 12 #"blocks+scene"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 9 #";ROTATION"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 39 #";block-rotate-ccw : Posn Block -> Block"
0 0 60 29 1 #"\n"
0 0 17 3 63
#";Rotates the block 90 degrees counterclockwise around the posn."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 3 #"   "
0 0 64 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 11 #"block-color"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-rotate-ccw"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 6 #"block1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-rotate-ccw"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 6 #"block2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 2 #"))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";rotate-ccw: world -> tetra"
0 0 60 29 1 #"\n"
0 0 17 3 61
#";Pulls apart the given world to pass it through the rotation "
0 0 60 29 1 #"\n"
0 0 17 3 42 #";and creates a tetra with the blocks moved"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"BSet-rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 14 3 9 #"block-set"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 14 3 9 #"block-set"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 14 3 9 #"block-set"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 15 #"BSet-rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 14 3 9 #"block-set"
0 0 22 3 7 #")))]))]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 15 #"BSet-rotate-ccw"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 6 #"))))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 5 #"11/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"19/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 42 #"                                          "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 28 #"                            "
0 0 64 3 1 #" "
0 0 64 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 2 #"w2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 42 #"                                          "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 28 #"                            "
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 38 #";tetra-rotate-cw : center BSet -> BSet"
0 0 60 29 1 #"\n"
0 0 17 3 70
(
 #";Rotates the given block set 90 degrees around the given center poin"
 #"t."
) 0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"tetra-rotate-cw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 14 3 9 #"block-set"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"block-rotate-cw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 16 #"block-rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 64 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 64 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 64 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 64 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 11 #"block-color"
0 0 64 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 6 #")))))]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"block-set"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"block-rotate-cw"
0 0 64 3 1 #" "
0 0 14 3 1 #"c"
0 0 64 3 1 #" "
0 0 14 3 9 #"block-set"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 9 #"block-set"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"tetra-rotate-cw"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"BSet1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"tetra-rotate-cw"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 26 #";rotate-cw: world -> tetra"
0 0 60 29 1 #"\n"
0 0 17 3 80
(
 #";Consumes a world and returns a world with a tetra rotated 90 degree"
 #"s clockwise."
) 0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rotate-cw"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 15 #"tetra-rotate-cw"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-center"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 5 #")))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rotate-cw"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 5 #"11/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"19/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 41 #"                                         "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 47 #"                                               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 47 #"                                               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 26 #"                          "
0 0 64 3 1 #" "
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rotate-cw"
0 0 64 3 1 #" "
0 0 14 3 2 #"w2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 41 #"                                         "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 47 #"                                               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 47 #"                                               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 27 #"                           "
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 3 1 #" "
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 15 #";CORE FUNCTIONS"
0 0 60 29 1 #"\n"
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 60 29 1 #"\n"
0 0 17 3 34 #";world-move: Number World -> World"
0 0 60 29 1 #"\n"
0 0 17 3 33 #";Returns world with a moved tetra"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-move"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"move-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 5 #"x-dir"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-move"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 5 #"13/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"19/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 64 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-move"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 2 #"w2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 64 3 1 #" "
0 0 64 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-move"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 2 #"w3"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 45 #"                                             "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"pink"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"3"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 36 #";key-press: key-event world -> world"
0 0 60 29 1 #"\n"
0 0 17 3 56 #";key-press takes the current world and the key event and"
0 0 60 29 1 #"\n"
0 0 17 3 44 #";produces a new world based on the key-event"
0 0 60 29 1 #"\n"
0 0 17 3 46 #";    left arrow: Shift the current piece left."
0 0 60 29 1 #"\n"
0 0 17 3 48 #";    right arrow: Shift the current piece right."
0 0 60 29 1 #"\n"
0 0 17 3 54 #";    s: Rotate the current piece 90 degrees clockwise."
0 0 60 29 1 #"\n"
0 0 17 3 61
#";    a: Rotate the current piece 90 degrees counterclockwise."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"handle-key"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 64 3 1 #" "
0 0 14 3 9 #"key-event"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"world-collide-left?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 13 #"collide-left?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 10 #"          "
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"world-collide-right?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 14 #"collide-right?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tetra-blocks"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 4 #")))]"
0 0 64 29 1 #"\n"
0 0 64 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 64 3 1 #" "
0 0 14 3 9 #"key-event"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"world-collide-right?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-move"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 64 3 1 #" "
0 0 14 3 9 #"key-event"
0 0 64 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"world-collide-left?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-move"
0 0 64 3 1 #" "
0 0 20 3 2 #"-1"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 64 3 1 #" "
0 0 14 3 9 #"key-event"
0 0 64 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"world-collide-left?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"world-collide-right?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"rotate-ccw"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #"))]"
0 0 64 29 1 #"\n"
0 0 64 3 10 #"          "
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"key=?"
0 0 64 3 1 #" "
0 0 14 3 9 #"key-event"
0 0 64 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"world-collide-left?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"world-collide-right?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"rotate-cw"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #"))]"
0 0 64 29 1 #"\n"
0 0 64 3 7 #"       "
0 0 64 3 3 #"   "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 4 #"])))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"handle-key"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 64 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 4 #"9/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"19/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"4"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 64 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"handle-key"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 5 #"13/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"19/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"7"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 64 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"handle-key"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 64 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 5 #"11/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"19/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 64 3 19 #"                   "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"handle-key"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 64 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 5 #"11/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"19/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 2 #"10"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 22 #"                      "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 30 #";game-over? : world -> boolean"
0 0 60 29 1 #"\n"
0 0 17 3 34 #";Ends the game when player loses. "
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"game-over?"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"block-y"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 64 3 1 #" "
0 0 14 3 12 #"BOARD-HEIGHT"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"game-over?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 7 #"))))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"game-over?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 2 #"20"
0 0 64 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 22 3 4 #"))))"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 5 #"     "
0 0 64 3 1 #" "
0 0 64 3 8 #"        "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"game-over?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 14 3 6 #"tetra1"
0 0 64 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 32 #";game-over-text : world -> image"
0 0 60 29 1 #"\n"
0 0 17 3 30 #";Displays the image Game Over."
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"game-over-text"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 1 #" "
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"text"
0 0 64 3 1 #" "
0 0 19 3 11 #"\"Game Over\""
0 0 64 3 1 #" "
0 0 20 3 2 #"24"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 20 3 3 #"150"
0 0 64 29 1 #"\n"
0 0 64 3 5 #"     "
0 0 64 3 10 #"          "
0 0 20 3 3 #"300"
0 0 64 29 1 #"\n"
0 0 64 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 12 #"world->image"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 30 #";world->world : world -> world"
0 0 60 29 1 #"\n"
0 0 17 3 53 #";On-tick, If collision -> initiate \"next-tetra-world\""
0 0 60 29 1 #"\n"
0 0 17 3 66
#";If no collision, initiate move-tetra to lower the tetra (gravity)"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"world->world"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 29 1 #"\n"
0 0 64 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 64 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 10 #"collision?"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"next-tetra-world"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #")]"
0 0 64 29 1 #"\n"
0 0 64 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"move-tetra"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"world-tetra"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 20 3 1 #"0"
0 0 64 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"world-pile"
0 0 64 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 5 #"))]))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 17 3 16 #";Tests/Examples:"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"world->world"
0 0 64 3 1 #" "
0 0 14 3 2 #"w1"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tetra"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 64 3 1 #" "
0 6          10 64 5 #"11/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 64 3 1 #" "
0 6          10 64 5 #"17/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"8"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"9"
0 0 64 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 3 #")))"
0 0 64 29 1 #"\n"
0 0 64 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 64 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"5"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"1"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 64 3 1 #" "
0 0 64 29 1 #"\n"
0 0 64 3 12 #"            "
0 0 64 3 12 #"            "
0 0 64 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-block"
0 0 64 3 1 #" "
0 0 20 3 1 #"6"
0 0 64 3 1 #" "
0 0 20 3 1 #"2"
0 0 64 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 4 #"))))"
0 0 60 29 1 #"\n"
0 0 60 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 60 3 1 #" "
0 0 14 3 13 #"initial-world"
0 0 60 29 1 #"\n"
0 0 60 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 7 #"to-draw"
0 0 60 3 1 #" "
0 0 60 3 1 #" "
0 0 60 3 1 #" "
0 0 14 3 12 #"world->image"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 7 #"on-tick"
0 0 60 3 1 #" "
0 0 60 3 1 #" "
0 0 60 3 1 #" "
0 0 14 3 12 #"world->world"
0 0 60 3 1 #" "
0 0 20 3 3 #"0.2"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 6 #"on-key"
0 0 60 3 1 #" "
0 0 60 3 2 #"  "
0 0 60 3 1 #" "
0 0 14 3 10 #"handle-key"
0 0 22 3 1 #")"
0 0 60 29 1 #"\n"
0 0 60 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 9 #"stop-when"
0 0 60 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 60 3 1 #" "
0 0 14 3 14 #"game-over-text"
0 0 22 3 2 #"))"
0           0
